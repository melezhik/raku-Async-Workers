tasks:
  -
    name: main
    default: true
    language: Raku
    code: |
      use Pretty::Table;
      my $table = Pretty::Table.new:
        title => "Rakudo Versions",
        field-names => ["Version", "Status", "Time"],
        sort-by => 'Version',
        align => %('Version' => 'l');
        
      for config()<tasks><multi-versions><state><list><> -> $i {
        $table.add-row: [ $i<version>, $i<status>,  $i<time> ];
      }
      say $table;
    depends:
      -
        name: multi-versions
  -
    name: multi-versions
    language: Raku
    config:
      list:
        - 2022.04
        - 2022.06
        - 2022.07
    code: |
      my @state;
      for config()<list><> -> $v {
        my $s = %( version => $v );
        if "{cache_root_dir()}/{$v}_ok".IO ~~ :e {
          $s<status> = "OK";
        } else {
          $s<status> = "FAIL";
        }
        if "{cache_root_dir()}/{$v}_time".IO ~~ :e {
          $s<time> = "{cache_root_dir()}/{$v}_time".IO.slurp();
        } else {
          $s<time> = "NA";
        }
        @state.push: $s;
      }
      update_state %( list => @state );
    init: |
      for config()<list><> -> $v {
        run_task("test", %( version => $v ));
      }
    subtasks:
      -
        name: test
        language: Bash
        init: |
          ignore_error
        code: |
          set -e
          rakubrew download moar-$version
          rakubrew switch moar-$version
          cd source/
          zef install --/test Pretty::Table
          zef install . --deps-only --test-depends --/test
          /usr/bin/time -o "${cache_root_dir}/${version}_time" \
          zef test . && touch "${cache_root_dir}/${version}_ok"
    depends:
      -
        name: rakubrew-install
  -
    name: rakubrew-install
    language: Bash
    code: |
      set -e
      curl -sf https://rakubrew.org/perl/rakubrew -o rakubrew
      sudo mv rakubrew /usr/local/bin
      sudo chmod a+x /usr/local/bin/rakubrew
      rakubrew mode shim
